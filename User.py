import sqlite3
from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update
from telegram.ext import (
    Application,
    CallbackQueryHandler,
    CommandHandler,
    ContextTypes,
    MessageHandler
)

# Callback data –¥–ª—è –∫–Ω–æ–ø–æ–∫
CALLBACK_FILL_FIELDS = "fill_fields"
CALLBACK_CHOOSE_REGION = "choose_region"
CALLBACK_CHOOSE_PRICE = "choose_price"
def create_connection(db_file):
    conn = None
    try:
        conn = sqlite3.connect(db_file)
        return conn
    except sqlite3.Error as e:
        print(e)
    return conn



# –°–æ–∑–¥–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –ë–î (–∏–ª–∏ —Ñ–∞–π–ª, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç)
conn = create_connection('search_bot.db')
cursor = conn.cursor()

# –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã, –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
cursor.execute('''CREATE TABLE IF NOT EXISTS Users (
                    id INTEGER PRIMARY KEY, 
                    name TEXT)''')
cursor.execute('''CREATE TABLE IF NOT EXISTS SearchData (
                    id INTEGER PRIMARY KEY AUTOINCREMENT,
                    user_id INTEGER,
                    keyword TEXT,
                    region TEXT DEFAULT NULL,
                    price_range TEXT DEFAULT NULL,
                    FOREIGN KEY (user_id) REFERENCES Users(id))''')
conn.commit()



async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –Ω–∞—á–∞–ª—å–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É."""
    keyboard = [
        [InlineKeyboardButton("–ù–∞—á–∞—Ç—å –ø–æ–∏—Å–∫ üîé", callback_data="start_search")],
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ —Å –ø–æ–∏—Å–∫–æ–º. ", reply_markup=reply_markup
    )

async def start_search(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤—ã–±–æ—Ä–æ–º —Ñ–∏–ª—å—Ç—Ä–æ–≤."""
    query = update.callback_query
    await query.answer()

    keyboard = [
        [InlineKeyboardButton("–ó–∞–ø–æ–ª–Ω–∏—Ç—å –ø–æ–ª—è –ø–æ–∏—Å–∫–∞", callback_data=CALLBACK_FILL_FIELDS)],
        [InlineKeyboardButton("–í—ã–±—Ä–∞—Ç—å —Ä–µ–≥–∏–æ–Ω –ø–æ–∏—Å–∫–∞", callback_data=CALLBACK_CHOOSE_REGION)],
        [InlineKeyboardButton("–í—ã–±—Ä–∞—Ç—å –¥–∏–∞–ø–∞–∑–æ–Ω —Ü–µ–Ω", callback_data=CALLBACK_CHOOSE_PRICE)],
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await query.edit_message_text("–ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–∏–ª—å—Ç—Ä—ã –ø–æ–∏—Å–∫–∞:", reply_markup=reply_markup)


async def handle_keyword(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ –∫–ª—é—á–µ–≤–æ–≥–æ —Å–ª–æ–≤–∞ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –µ–≥–æ –≤ –ë–î."""
    user_input = update.message.text
    user_id = update.effective_user.id
    user_name = update.effective_user.first_name

    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ç–∞–±–ª–∏—Ü—É Users, –µ—Å–ª–∏ –µ–≥–æ —Ç–∞–º –Ω–µ—Ç
    cursor.execute("SELECT * FROM Users WHERE id = ?", (user_id,))
    existing_user = cursor.fetchone()
    if not existing_user:
        cursor.execute("INSERT INTO Users (id, name) VALUES (?, ?)", (user_id, user_name))
        conn.commit()

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ –≤ —Ç–∞–±–ª–∏—Ü—É SearchData
    cursor.execute("INSERT INTO SearchData (user_id, keyword) VALUES (?, ?)", (user_id, user_input))
    conn.commit()
    await update.message.reply_text(f"–ö–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ '{user_input}' —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ!")




async def handle_fill_fields(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –≤–≤–æ–¥ –∫–ª—é—á–µ–≤–æ–≥–æ —Å–ª–æ–≤–∞."""
    query = update.callback_query
    await query.answer()
    await query.edit_message_text("–í–≤–µ–¥–∏—Ç–µ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ –¥–ª—è –ø–æ–∏—Å–∫–∞:")

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–ª—é—á–µ–≤–æ–≥–æ —Å–ª–æ–≤–∞
    context.user_data['waiting_for_keyword'] = True
    #context.add_handler(MessageHandler(Filters.text & ~Filters.command, handle_keyword), group=1)
print("–û—Å—Ç–∞–Ω–æ–≤–∏–ª–∏—Å—å —Ç—É—Ç ")




async def handle_callback_query(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ inline-–∫–Ω–æ–ø–∫–∏."""
    query = update.callback_query
    await query.answer()

    if query.data == CALLBACK_FILL_FIELDS:
        await handle_fill_fields(update, context)
    elif query.data == CALLBACK_CHOOSE_REGION:
        # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –≤—ã–±–æ—Ä–∞ —Ä–µ–≥–∏–æ–Ω–∞ (–∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ handle_fill_fields)
        await query.edit_message_text("–§—É–Ω–∫—Ü–∏—è –≤—ã–±–æ—Ä–∞ —Ä–µ–≥–∏–æ–Ω–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.")
    elif query.data == CALLBACK_CHOOSE_PRICE:
        # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –≤—ã–±–æ—Ä–∞ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ —Ü–µ–Ω (–∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ handle_fill_fields)
        await query.edit_message_text("–§—É–Ω–∫—Ü–∏—è –≤—ã–±–æ—Ä–∞ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ —Ü–µ–Ω –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.")


def main() -> None:
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞."""
    application = Application.builder().token("YOUR_BOT_TOKEN").build()
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CallbackQueryHandler(handle_callback_query))
    application.run_polling()


if __name__ == "__main__":
    main()


# import sqlite3
# from telegram import Update
# from telegram.ext import ContextTypes
# # –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
# conn = sqlite3.connect('mydatabase.db')
#
# # –°–æ–∑–¥–∞–Ω–∏–µ –∫—É—Ä—Å–æ—Ä–∞ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤
# cursor = conn.cursor()
#
# # # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã Users
# # cursor.execute('''
# # CREATE TABLE Users (
# #     id INTEGER PRIMARY KEY AUTOINCREMENT,
# #     name TEXT NOT NULL,
# #     messages_count INTEGER
# # )
# # ''')
# #
# # # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã saved_search
# # cursor.execute('''
# # CREATE TABLE saved_search (
# #     id INTEGER PRIMARY KEY AUTOINCREMENT,
# #     search_string TEXT NOT NULL
# # )
# # ''')
# #
# # # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
# # conn.commit()
#
# # –ó–∞–∫—Ä—ã—Ç–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
# conn.close()
#
#
# def add_user_to_db(update: Update) -> None:
#     """
#     –î–æ–±–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–∞—Ç-–±–æ—Ç–∞ –≤ —Ç–∞–±–ª–∏—Ü—É Users –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.
#
#     Args:
#         update: –û–±—ä–µ–∫—Ç Update, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º—ã–π –±–∏–±–ª–∏–æ—Ç–µ–∫–æ–π telegram.ext.
#         context: –û–±—ä–µ–∫—Ç Context, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º—ã–π –±–∏–±–ª–∏–æ—Ç–µ–∫–æ–π telegram.ext.
#     """
#
#     # –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –æ–±—ä–µ–∫—Ç–∞ Update
#     user_id = update.chat.id
#
#     # –ü–æ–ª—É—á–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –æ–±—ä–µ–∫—Ç–∞ Update
#     print("—Å—é–¥–∞ –¥–æ—à–ª–∏")
#     user_name = update.from_user.id
#     # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
#     conn = sqlite3.connect('mydatabase.db')
#     cursor = conn.cursor()
#
#     # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
#     cursor.execute("SELECT * FROM Users WHERE id = ?", (user_id,))
#     existing_user = cursor.fetchone()
#
#     # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –æ–±–Ω–æ–≤–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π
#     if existing_user:
#         cursor.execute("UPDATE Users SET messages_count = messages_count + 1 WHERE id = ?", (user_id,))
#     # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–æ–≤—ã–π, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –≤ —Ç–∞–±–ª–∏—Ü—É
#     else:
#         cursor.execute("INSERT INTO Users (id, name, messages_count) VALUES (?, ?, 0)", (user_id, user_name))
#
#     # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
#     conn.commit()
#     # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
#     conn.close()
#
#     # –í—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)
#     #update.message.reply_text(f"–ü—Ä–∏–≤–µ—Ç, {user_name}! –Ø –¥–æ–±–∞–≤–∏–ª —Ç–µ–±—è –≤ —Å–≤–æ—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.")
# print('–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–æ–∑–¥–∞–Ω–∞ —Å —Ç–∞–±–ª–∏—Ü–∞–º–∏ Users –∏ saved_search')
# print(mydata)