Я  хочу передать этот текст разработчику чтобы он написал мне код, 
Основные цели разработчика:
Создание полной описанной структуры бота с помощью aiogram.
Реализация обработчиков команд и кнопок.
 Подключение базы данных к боту.  Тестирование и отладка. 
Попробуй улучшить текст, он начинается с "Начало: "для понимания, он будет писать на питон. добавь к функционалу бота навигацию по меню, кнопки назад и вернуться в главное меню поиска
 Данное требование описывает базовый функционал чат-бота. Возможны изменения и дополнения в зависимости от конкретных задач и пожеланий.
*   Необходимо проработать дизайн и пользовательский интерфейс бота для обеспечения удобства использования.
*   Важно уделить внимание  надежности, безопасности и производительности чат-бота. 
*   Важно уделить внимание удобству использования,  интуитивно понятному интерфейсу и обработке ошибок. 
*   Необходимо обеспечить безопасность данных пользователей и  защиту от злонамеренного использования бота. 

## Чат-бот для поиска тендеров: Детализированный план

1.  Технологии:

*   Язык программирования: Python
*   Фреймворк для бота: aiogram
*   База данных: SQLite (для простоты) 
*   Парсинг: requests, BeautifulSoup4
*   Размещение: (зависит от ваших предпочтений, например, PythonAnywhere, Heroku)

2. База данных:

*   Таблица `users`:
    *   user_id (INTEGER, PRIMARY KEY)
    *   username (TEXT) - Необязательно
*   Таблица `searches`:
    *   search_id (INTEGER, PRIMARY KEY)
    *   user_id (INTEGER, FOREIGN KEY)
    *   search_active (BOOLEAN) - True = активен, False = неактивен
*   Таблица `search_keywords`:
    *   keyword_id (INTEGER, PRIMARY KEY)
    *   search_id (INTEGER, FOREIGN KEY)
    *   keyword (TEXT) 
*   Таблица `search_regions`:
    *   region_id (INTEGER, PRIMARY KEY)
    *   search_id (INTEGER, FOREIGN KEY)
    *   region (TEXT)  
*   Таблица `search_price`:
    *   price_id (INTEGER, PRIMARY KEY)
    *   search_id (INTEGER, FOREIGN KEY)
    *   min_price (INTEGER)
    *   max_price (INTEGER)
*   Таблица `tenders`:  (структура зависит от данных, получаемых при парсинге)
*   Таблица `favorite_tenders`:
    *   favorite_id (INTEGER, PRIMARY KEY)
    *   user_id (INTEGER, FOREIGN KEY)
    *   tender_id (INTEGER, FOREIGN KEY)

3. Функционал и структура бота:

*   Команда `/start`:
*   Бот отправляет приветственное сообщение.
    *   Бот показывает клавиатуру с кнопками:
           
        *   Добавить поиск
        *   Мои поиски
        *   Избранные тендеры 
	*   Инструкция бота
        *   Больше возможностей в будущем (неактивна)

*   Кнопка `Инструкция бота`: 
    *   Описание функционала.
	  *   Выводит краткое описание работы бота и доступных функций. Сформируй его пожалуйста.


*   Кнопка `Добавить поиск`:

    1.  *   Нажатие на кнопку `Начать поиск` или `Добавить поиск`:
  	  *   Бот отправляет сообщение: "Чтобы добавить поиск, заполните фильтры (необязательно):" 
  	  *   Бот показывает Inline-кнопки в столбец:
        *   Добавить ключевое поле
        *   Выбрать регион 
        *   Выбрать диапазон цен 
        *   Сохранить и начать поиск (активна)
    3. Добавление ключевых слов:***

	   Нажатие на кнопку `Добавить ключевое поле`:
    *   Бот отправляет сообщение: "Введите ключевое слово для поиска:"
    *   Бот ожидает ввода ключевого слова от пользователя.
    *   После получения ключевого слова, бот добавляет его в массив keywords.
    *   Бот спрашивает: "Добавить еще одно ключевое слово? (Да/Нет)"
    *   Если пользователь отвечает "Да", то шаг 3 повторяется.
    *   Если пользователь отвечает "Нет", то бот обновляет Inline-кнопку Добавить ключевое поле (добавляя зеленую галочку).

*   Нажатие на кнопку `Выбрать регион`:
    *   Бот отправляет сообщение: "Выберите регион:"
    *   Бот показывает Inline-кнопки в виде двух столбцов по 10 кнопок (всего 20 регионов на странице). Список отсортирован в алфавитном порядке. Заполни список пусть это будут  85 регионов России
    *   Подкнопками расположены кнопки для навигации по страницам: << (предыдущая страница), номер текущей страницы,  >> (следующая страница).
    *   Выбранный регион сохраняется в переменной selected_region.

    3.  Выбор диапазона цен:
      бот присылает сообщение сообщение «введите минимальную цену
	От {здесь должно быть значение переменной минимальной цены обновляется, если диапазон не выбран, то в сообщении выводится "не указано"})  до  {значение переменной максимальная цена}
	 (если переменные пустые, то выводится текст {не указано}
	К этому сообщению инлайн кнопки 

	1. От 100 000 рублей
	3. От 500 000
	4. От 1 000 000
	5. От 5 000 000
	6. Не указывать 

	После этого ожидается ответ пользователя 
	И он может ввести сумму в ручную, или нажать на кнопки, при нажатии бот отправляет сообщение с текстом из выбранной инлайн кнопки и значение переменной минимальной цены добавляется базу данных  в таблицу сохраненных поисков

После выбора минимальной цены присылается такое же сообщение с выбором максимальной цены. Логика такая же. 


    4.  Кнопка `Сохранить и начать поиск`:
        *   Создаётся новая запись в таблице searches (`search_active = True`).
        *   current_keywords, current_regions и данные о цене сохраняются в соответствующие таблицы, связанные с search_id.
        *   Запускается функция parse_and_search(), которая:
            *   Парсит сайты с тендерами.
            *   Сравнивает найденные тендеры с фильтрами пользователя.
            *   Если находит совпадение, отправляет информацию пользователю.

*   Кнопка `Мои поиски`:

    *   Выводит список активных поисков пользователя (из таблицы searches где `search_active = True`).
    *   Для каждого поиска:
        *   Кнопка с названием (первое ключевое слово), количеством найденных тендеров и статусом (активен/неактивен). 
        *   Нажатие на кнопку позволяет: 
            *   Просмотреть/редактировать фильтры. 
            *   Деактивировать/активировать поиск. 
    *   Кнопка Редактировать поиск внизу списка.

*   Кнопка `Избранные тендеры`:

    *   Отображает список избранных тендеров.
    *   Предоставляет возможность удалять тендеры из избранного.

4. Дополнительные функции (по желанию):

*   Автоматическое обновление результатов:
    *   Периодически (например, раз в день) запускать parse_and_search() для активных поисков.
    *   Отправлять уведомления пользователю о новых тендерах.
*   Расширенная информация о тендерах: 
    *   Предоставлять возможность пользователю запросить подробную информацию о тендере (документация, контакты и т.д.).
*   Система рейтинга/релевантности: 
    *   Разработать алгоритм, оценивающий релевантность тендера для пользователя.