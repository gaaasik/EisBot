# This is a sample Python script.

# Press Shift+F10 to execute it or replace it with your code.
# Press Double Shift to search everywhere for classes, files, tool windows, actions, and settings.
# coding: utf8

from python.config import *
from python.parsing import *
import re

#from db import * –µ—Å–ª–∏ –±—É–¥–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö

from telebot import types # –¥–ª—è —É–∫–∞–∑–∞–Ω–∏–µ —Ç–∏–ø–æ–≤
import telebot

bot = telebot.TeleBot(TOKEN)

savedFltr = types.InlineKeyboardButton("–°–æ—Ö—Ä–∞–Ω—ë–Ω—ã–µ –ø–æ–∏—Å–∫–∏ üíæ ", callback_data='createFltrSrch')
configNtfc = types.InlineKeyboardButton("–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π", callback_data='configNtfc')
returnToMain = types.InlineKeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é üìÉ", callback_data='returnToMain')
returnBack = types.InlineKeyboardButton("–ù–∞–∑–∞–¥ üîô", callback_data='returnBack')
#savedFltr = types.InlineKeyboardButton("–°–æ—Ö—Ä–∞–Ω—ë–Ω—ã–µ –ø–æ–∏—Å–∫–∏ üíæ ", callback_data='createFltrSrch')


# –°–ª–æ–≤–∞—Ä—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –º–µ –∂–¥—É —Ç–µ–∫—Å—Ç–æ–º —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –∑–Ω–∞–∫–∞–º–∏ –∑–æ–¥–∏–∞–∫–∞


@bot.message_handler(commands=['start'])
def send_welcome(message):
    add_user_to_db(message)
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markupAllow = types.InlineKeyboardMarkup()
    markupInline = types.InlineKeyboardMarkup(row_width=1)
    btn1 = types.KeyboardButton("üîç –ü–æ–∏—Å–∫ —Ç–µ–Ω–¥–µ—Ä–æ–≤")
    btn2 = types.KeyboardButton("üöÄ–ë–æ–ª—å—à–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π")
    btn3 = types.KeyboardButton("üë®‚Äçüíª –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å")
    btn4 = types.KeyboardButton("üìö –ü–æ–º–æ—â—å")

    button1 = types.InlineKeyboardButton("–ù–∞—á–∞—Ç—å –ø–æ–∏—Å–∫ ‚úÖ", callback_data='startfinder', message=message)
    configNtfc = types.InlineKeyboardButton("–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π", callback_data='configNtfc')
    button2 = types.InlineKeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data='returntomain')
    markupAllow.add(button1, button2)
    markup.add( btn3,btn1,btn2, btn4)
    createFltrSrch = types.InlineKeyboardButton("–°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞ –ø–æ–∏—Å–∫–∞ üîç ", callback_data='createFltrSrch')
    markupInline.add(createFltrSrch,savedFltr,configNtfc)


    bot.send_message(message.chat.id, text="–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ç–µ–Ω–¥–µ—Ä–æ–≤, —Å–∫–æ—Ä–æ –∑–¥–µ—Å—å –ø–æ—è–≤–∏—Ç—Å—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è", reply_markup=markup)

    bot.send_message(message.from_user.id, text="–í—ã–±–µ—Ä–∏ –Ω—É–∂–Ω–æ–µ –º–µ–Ω—é –¥–ª—è –ø–æ–∏—Å–∫–∞:",reply_markup=markupInline)

@bot.message_handler(commands=['üîç –ü–æ–∏—Å–∫ —Ç–µ–Ω–¥–µ—Ä–æ–≤'])



@bot.message_handler(content_types=['text'])
def func(message):

    markupReturntoMain = types.InlineKeyboardMarkup()
    button1 = types.InlineKeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É", callback_data='return')
    markupReturntoMain.add(button1)


    if (message.text == "üîç –ü–æ–∏—Å–∫ —Ç–µ–Ω–¥–µ—Ä–æ–≤"):
        #bot.register_next_step_handler(message, outputList)
        print()
    elif (message.text == "‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å"):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton("üöÄ–ë–æ–ª—å—à–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π")
        btn2 = types.KeyboardButton("üìö –ü–æ–º–æ—â—å")
        back = types.KeyboardButton("üë®‚Äçüíª –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å")
        markup.add(btn1, btn2, back)
        bot.send_message(message.chat.id, text="–ó–∞–¥–∞–π –º–Ω–µ –≤–æ–ø—Ä–æ—Å", reply_markup=markup,)

    elif (message.text == "üìö –ü–æ–º–æ—â—å"):
        bot.send_message(message.chat.id, "üìö –ü–æ–º–æ—â—å \n \n –ù–∞—à —Å–µ–π—á–∞—Å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ —Å—Ç–∞–¥–∏–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–±–æ–π —É–¥–æ–±–Ω—ã–π —Å–µ—Ä–≤–∏—Å –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∑–∞ –ø–æ—è–≤–ª–µ–Ω–∏–µ–º –Ω–æ–≤—ã—Ö —Ç–µ–Ω–¥–µ—Ä–æ–≤ –Ω–∞ –ø–ª–æ—â–∞–¥–∫–µ zakupki.gov.ru. "
                                          "\n \n –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´üîç –ü–æ–∏—Å–∫ —Ç–µ–Ω–¥–µ—Ä–æ–≤¬ª, –≤–≤–µ–¥–∏—Ç–µ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –±—É–¥–µ—Ç –ø—Ä–æ–≤–æ–¥–∏—Ç—å—Å—è –ø–æ–∏—Å–∫ —Ç–µ–Ω–¥–µ—Ä–æ–≤, "
                                          "–∏ –≤—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–≥–∏–æ–Ω(—ã) —Ç–µ–Ω–¥–µ—Ä–æ–≤. \n \n –ù–µ –∑–∞–±—É–¥—å—Ç–µ –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –ó–∞–∫–æ–Ω—á–∏—Ç—å –≤—ã–±–æ—Ä- –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Å–≤–æ–µ–≥–æ –≤—ã–±–æ—Ä–∞. \n\n  –ß—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ, –Ω–∞–∂–º–∏—Ç–µ "
                                          "–Ω–∞ –∫–Ω–æ–ø–∫—É üìà –ú–æ–∏ —Ç–µ–Ω–¥–µ—Ä—ã, –∑–∞—Ç–µ–º –≤—ã–±–µ—Ä–∏—Ç–µ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É ‚ùå–£–¥–∞–ª–∏—Ç—å.\n \n üë®‚Äçüíª –ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ @gaaasik")
    elif message.text == "üë®‚Äçüíª –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å":
        bot.send_message(message.chat.id, text="üë®‚Äçüíª –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å\n  \n –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–æ–æ–±—â–∏—Ç—å –æ–± –æ—à–∏–±–∫–µ, —Ç–æ –≤—ã –º–æ–∂–µ—Ç–µ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –Ω–∞—à–µ–º—É —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–º—É —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É \n \n  üë®‚Äçüíª –ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ @gaaasik ")
    elif message.text == "üöÄ–ë–æ–ª—å—à–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π":
        bot.send_message(message.chat.id,text="üöÄ–ë–æ–ª—å—à–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π \n \n –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ - —ç—Ç–æ –ø–ª–∞—Ç–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤ –ø–æ–ª–Ω–æ–π –º–µ—Ä–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–∞—à —Å–µ—Ä–≤–∏—Å.\n \n "
                              "–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª:\n ‚Äî –ü–æ–ª—É—á–µ–Ω–∏—è –≤—ã–≥—Ä—É–∑–∫–∏ —Ç–µ–Ω–¥–µ—Ä–æ–≤ –≤ Excel —Ñ–∞–π–ª–µ\n ‚Äî –ü—Ä–æ—Å–º–æ—Ç—Ä –∏—Å—Ç–æ—Ä–∏–∏ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —Ç–µ–Ω–¥–µ—Ä–æ–≤\n ‚Äî –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∏–∑–±—Ä–∞–Ω–Ω—ã–µ —Ç–µ–Ω–¥–µ—Ä—ã \n \n"
                              "–í –¥–∞–ª—å–Ω–µ–π—à–µ–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –±—É–¥–µ—Ç –¥–æ–ø–æ–ª–Ω—è—Ç—å—Å—è!\n \n–°—Ç–æ–∏–º–æ—Å—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ ‚Äî –ø–∏—Å—è—Ç —Ä—É–±–ª–µ–π")

    elif (message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        button1 = types.KeyboardButton("–ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è")
        button2 = types.KeyboardButton("–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å")
        markup.add(button1, button2)
        bot.send_message(message.chat.id, text="–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=markup)
    else:
        bot.send_message(message.chat.id, text="–ù–∞ —Ç–∞–∫—É—é –∫–æ–º–º–∞–Ω–¥—É —è –Ω–µ –∑–∞–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω, –≤—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω–æ–µ –º–µ–Ω—é")

def create(message):
    bot.send_message(message.chat.id, "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–æ–∏—Å–∫")
    markupAllow = types.InlineKeyboardMarkup()

    finderCallback_str = str('startfinder') + '|' + message.text

    # markupAllow.add(createFltrSrch)
    # markupAllow.add(savedFltr)
    # markupAllow.add(configNtfc)
    # markupAllow.add(returnToMain)

    bot.send_message(message.chat.id, text="–ù–∞—á–∞—Ç—å –ø–æ–∏—Å–∫ —Ç–µ–Ω–¥–µ—Ä–æ–≤ —Å –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–æ–º: \n \n"+message.text+" ? \n \n –Ω–∞–∂–º–∏—Ç–µ –î–∞ –∏–ª–∏ –ù–µ—Ç", reply_markup=markupAllow)

    print("–°–æ–æ–±—â–µ–Ω–∏–µ")
    #print(message)
    #print(parseEis(message))

def check_answers(msg):
    print('start check ansewr')
    notFound ="–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
    errorWithBot = "–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞"
    tenders = parseEis(msg)

    try:
        if len(tenders) == 0:
            return notFound
        else:
            return tenders
    except:
        print("Something went wrong")
        return errorWithBot


# def check_answers(message):
#     #print(message.text)
#     if message.text == "–ù–∞—á–∞—Ç—å –ø–æ–∏—Å–∫ ‚úÖ":
#         try:
#             tenders = parseEis(msg)
#             print("—á—Ç–æ —Ç–æ —Ç—É—Ç –µ—Å—Ç—å")
#             if tenders == 0:
#                 bot.send_message(message.chat.id, text="–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–µ—Ä–∞")
#             else:
#                 chat_id = message.chat.id
#                 print('\n'.join(map(str, tenders)))
#                 bot.send_message(chat_id, '\n'.join(map(str, tenders)))
#         except:
#             bot.send_message(message.chat.id, text="–û—à–∏–±–∫–∞")

@bot.callback_query_handler(func=lambda call: re.search('createFltrSrch', call.data))  # –õ–æ–≤–∏–º –∫–æ–ª–ª–±—ç–∫ –æ—Ç –∫–Ω–æ–ø–∫–∏. –ù–∞–º –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –æ–±—ä–µ–∫—Ç CallbackQuery –∫–æ—Ç–æ—Ä—ã–π —Å–æ–¥–µ—Ä–∂–∏—Ç –ø–æ–ª–µ data –∏ message. –°–µ–π—á–∞—Å –Ω–∞–º –Ω—É–∂–Ω–æ –∏–∑ –¥–∞—Ç—ã –¥–æ—Å—Ç–∞—Ç—å –Ω–∞—à–µ —Å–ª–æ–≤–æ –∫–æ—Ç–æ—Ä–æ–µ –º—ã –ø–µ—Ä–µ–¥–∞–ª–∏ –≤ –∞—Ç—Ä–∏–±—É—Ç–µ callback_data
def create_finder(callback_query: types.CallbackQuery):
    print(callback_query.data)
    markupMenuCreateFltr = types.InlineKeyboardMarkup(row_width=1)
    inputKeyFind = types.InlineKeyboardButton("–í–≤–µ—Å—Ç–∏ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ –¥–ª—è –ø–æ–∏—Å–∫–∞ üîç ", callback_data='inputKeyFind')
    inputRegion = types.InlineKeyboardButton("–í—ã–±–µ—Ä–µ—Ç–µ —Ä–µ–≥–∏–æ–Ω üó∫Ô∏è ", callback_data='inputRegion')
    inputPrice = types.InlineKeyboardButton("–í—ã–±–µ—Ä–µ—Ç–µ —Ü–µ–Ω—É ‚ÇΩ ", callback_data='inputPrice')
    markupMenuCreateFltr.add(inputKeyFind,inputRegion,inputPrice)
    bot.send_message(callback_query.message.chat.id,text="–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä–∞",reply_markup=markupMenuCreateFltr)
    print("–ó–∞—à–ª–∏ –≤ –∫–Ω–æ–ø–∫—É –∫–≤–µ—Ä–∏")

@bot.callback_query_handler(func=lambda call: re.search('inputKeyFind', call.data))# –õ–æ–≤–∏–º –∫–æ–ª–ª–±—ç–∫ –æ—Ç –∫–Ω–æ–ø–∫–∏. –ù–∞–º –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –æ–±—ä–µ–∫—Ç CallbackQuery –∫–æ—Ç–æ—Ä—ã–π —Å–æ–¥–µ—Ä–∂–∏—Ç –ø–æ–ª–µ data –∏ message. –°–µ–π—á–∞—Å –Ω–∞–º –Ω—É–∂–Ω–æ –∏–∑ –¥–∞—Ç—ã –¥–æ—Å—Ç–∞—Ç—å –Ω–∞—à–µ —Å–ª–æ–≤–æ –∫–æ—Ç–æ—Ä–æ–µ –º—ã –ø–µ—Ä–µ–¥–∞–ª–∏ –≤ –∞—Ç—Ä–∏–±—É—Ç–µ callback_data
def create_finder(callback_query: types.CallbackQuery):
    print((callback_query.data))
    markupInputValueKey = types.InlineKeyboardMarkup(row_width=1)
    InputValueKey = types.InlineKeyboardButton("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –∑–∞–∫—É–ø–∫–∏", callback_data='InputValueKey')
    markupInputValueKey.add(InputValueKey)
    bot.send_message(callback_query.message.chat.id, text="–í–≤–µ–¥–∏—Ç–µ –∫–ª—é—á–µ–≤–æ–µ –ø–æ–ª–µ ", reply_markup=markupInputValueKey)

@bot.callback_query_handler(func=lambda call: re.search('InputValueKey', call.data))# –õ–æ–≤–∏–º –∫–æ–ª–ª–±—ç–∫ –æ—Ç –∫–Ω–æ–ø–∫–∏. –ù–∞–º –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –æ–±—ä–µ–∫—Ç CallbackQuery –∫–æ—Ç–æ—Ä—ã–π —Å–æ–¥–µ—Ä–∂–∏—Ç –ø–æ–ª–µ data –∏ message. –°–µ–π—á–∞—Å –Ω–∞–º –Ω—É–∂–Ω–æ –∏–∑ –¥–∞—Ç—ã –¥–æ—Å—Ç–∞—Ç—å –Ω–∞—à–µ —Å–ª–æ–≤–æ –∫–æ—Ç–æ—Ä–æ–µ –º—ã –ø–µ—Ä–µ–¥–∞–ª–∏ –≤ –∞—Ç—Ä–∏–±—É—Ç–µ callback_data
def create_finder(callback_query: types.CallbackQuery):
    #print(callback_query.message.text)
    inputkey = bot.send_message(callback_query.message.chat.id,'–í–≤–µ–¥–∏—Ç–µ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ')
    #bot.register_next_step_handler(inputkey, outputList)

@bot.callback_query_handler(func=lambda c: re.search('startfinder',c.data))#–õ–æ–≤–∏–º –∫–æ–ª–ª–±—ç–∫ –æ—Ç –∫–Ω–æ–ø–∫–∏. –ù–∞–º –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –æ–±—ä–µ–∫—Ç CallbackQuery –∫–æ—Ç–æ—Ä—ã–π —Å–æ–¥–µ—Ä–∂–∏—Ç –ø–æ–ª–µ data –∏ message. –°–µ–π—á–∞—Å –Ω–∞–º –Ω—É–∂–Ω–æ –∏–∑ –¥–∞—Ç—ã –¥–æ—Å—Ç–∞—Ç—å –Ω–∞—à–µ —Å–ª–æ–≤–æ –∫–æ—Ç–æ—Ä–æ–µ –º—ã –ø–µ—Ä–µ–¥–∞–ª–∏ –≤ –∞—Ç—Ä–∏–±—É—Ç–µ callback_data
def callback_answer(callback_query: types.CallbackQuery): #–ò –æ—Ç–≤–µ—á–∞–µ–º –Ω–∞ –Ω–µ–≥–æ
    print("–¢—É—Ç –Ω–∞–¥–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø–æ–∏—Å–∫")
    first_param = callback_query.data.split('|')[0]
    second_param = callback_query.data.split('|')[1]
    bot.answer_callback_query(
        callback_query.id,
        text='–ú—ã –Ω–∞—á–∞–ª–∏ –ø–æ–∏—Å–∫',
        show_alert=True
    )
    print(second_param,second_param)

    result = check_answers(second_param)
    print('htpekmfn ',result)
    if result == 0:
        bot.send_message(callback_query.message.chat.id, text="–¢–µ–Ω–¥–µ—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
    elif result == 2:
        bot.send_message(callback_query.message.chat.id,'–û—â–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞')
    elif result == 1:
        bot.send_message(callback_query.message.chat.id, result)


#    print(data)





# Press the green button in the gutter to run the script.


# See PyCharm help at https://www.jetbrains.com/help/pycharm/

bot.infinity_polling(interval=0)